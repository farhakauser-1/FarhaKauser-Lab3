{"ast":null,"code":"import _classCallCheck from \"/Users/farha/Downloads/GraphQL/GraphQL/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/farha/Downloads/GraphQL/GraphQL/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/farha/Downloads/GraphQL/GraphQL/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/farha/Downloads/GraphQL/GraphQL/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/farha/Downloads/GraphQL/GraphQL/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/farha/Downloads/GraphQL/GraphQL/frontend/src/components/AddBook.js\";\nimport React, { Component } from 'react';\nimport { graphql, compose } from 'react-apollo';\nimport { getAuthorsQuery, getBooksQuery, getBuyersQuery } from '../queries/queries';\nimport { addBookMutation } from '../mutation/mutations';\n\nvar AddBook =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddBook, _Component);\n\n  function AddBook(props) {\n    var _this;\n\n    _classCallCheck(this, AddBook);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddBook).call(this, props));\n    _this.state = {\n      name: '',\n      genre: '',\n      authorId: ''\n    };\n    return _this;\n  }\n\n  _createClass(AddBook, [{\n    key: \"displayAuthors\",\n    value: function displayAuthors() {\n      var data = this.props.getAuthorsQuery;\n      var data1 = this.props.getBuyersQuery;\n      console.log('Buyers' + JSON.stringify(data1.buyers));\n\n      if (data.loading) {\n        return React.createElement(\"option\", {\n          disabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, \"Loading authors\");\n      } else {\n        return data.authors.map(function (author) {\n          return React.createElement(\"option\", {\n            key: author.id,\n            value: author.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          }, author.name);\n        });\n      }\n    }\n  }, {\n    key: \"submitForm\",\n    value: function submitForm(e) {\n      e.preventDefault();\n      console.log(this.state);\n      this.props.addBookMutation({\n        variables: {\n          name: this.state.name,\n          genre: this.state.genre,\n          authorId: this.state.authorId\n        },\n        refetchQueries: [{\n          query: getBuyersQuery\n        }]\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"form\", {\n        id: \"add-book\",\n        onSubmit: this.submitForm.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Book name:\"), React.createElement(\"input\", {\n        type: \"text\",\n        onChange: function onChange(e) {\n          return _this2.setState({\n            name: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Genre:\"), React.createElement(\"input\", {\n        type: \"text\",\n        onChange: function onChange(e) {\n          return _this2.setState({\n            genre: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Author:\"), React.createElement(\"select\", {\n        onChange: function onChange(e) {\n          return _this2.setState({\n            authorId: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Select author\"), this.displayAuthors())), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Submit\"));\n    }\n  }]);\n\n  return AddBook;\n}(Component);\n\nexport default compose(graphql(getAuthorsQuery, {\n  name: 'getAuthorsQuery'\n}), graphql(getBuyersQuery, {\n  name: 'getBuyersQuery'\n}), graphql(addBookMutation, {\n  name: 'addBookMutation'\n}))(AddBook);","map":{"version":3,"sources":["/Users/farha/Downloads/GraphQL/GraphQL/frontend/src/components/AddBook.js"],"names":["React","Component","graphql","compose","getAuthorsQuery","getBooksQuery","getBuyersQuery","addBookMutation","AddBook","props","state","name","genre","authorId","data","data1","console","log","JSON","stringify","buyers","loading","authors","map","author","id","e","preventDefault","variables","refetchQueries","query","submitForm","bind","setState","target","value","displayAuthors"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { graphql, compose } from 'react-apollo'\nimport {\n  getAuthorsQuery,\n  getBooksQuery,\n  getBuyersQuery\n} from '../queries/queries'\nimport { addBookMutation } from '../mutation/mutations'\n\nclass AddBook extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      name: '',\n      genre: '',\n      authorId: ''\n    }\n  }\n  displayAuthors () {\n    var data = this.props.getAuthorsQuery\n    var data1 = this.props.getBuyersQuery\n\n    console.log('Buyers' + JSON.stringify(data1.buyers))\n    if (data.loading) {\n      return <option disabled>Loading authors</option>\n    } else {\n      return data.authors.map(author => {\n        return (\n          <option key={author.id} value={author.id}>\n            {author.name}\n          </option>\n        )\n      })\n    }\n  }\n  submitForm (e) {\n    e.preventDefault()\n    console.log(this.state)\n    this.props.addBookMutation({\n      variables: {\n        name: this.state.name,\n        genre: this.state.genre,\n        authorId: this.state.authorId\n      },\n      refetchQueries: [{ query: getBuyersQuery }]\n    })\n  }\n  render () {\n    return (\n      <form id='add-book' onSubmit={this.submitForm.bind(this)}>\n        <div className='field'>\n          <label>Book name:</label>\n          <input\n            type='text'\n            onChange={e => this.setState({ name: e.target.value })}\n          />\n        </div>\n        <div className='field'>\n          <label>Genre:</label>\n          <input\n            type='text'\n            onChange={e => this.setState({ genre: e.target.value })}\n          />\n        </div>\n        <div className='field'>\n          <label>Author:</label>\n          <select onChange={e => this.setState({ authorId: e.target.value })}>\n            <option>Select author</option>\n            {this.displayAuthors()}\n          </select>\n        </div>\n        <button>Submit</button>\n      </form>\n    )\n  }\n}\n\nexport default compose(\n  graphql(getAuthorsQuery, { name: 'getAuthorsQuery' }),\n  graphql(getBuyersQuery, { name: 'getBuyersQuery' }),\n  graphql(addBookMutation, { name: 'addBookMutation' })\n)(AddBook)\n"]},"metadata":{},"sourceType":"module"}