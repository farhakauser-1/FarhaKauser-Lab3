{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/farha/Downloads/GraphQL/GraphQL/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  {\\n    buyer(email: $email)\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  {\\n    books {\\n      name\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  {\\n    authors {\\n      name\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query login($email: String) {\\n    login(email: $email) {\\n      result\\n      buyer {\\n        firstname\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from 'apollo-boost';\nvar login = gql(_templateObject());\nvar getAuthorsQuery = gql(_templateObject2());\nvar getBooksQuery = gql(_templateObject3());\nvar getBuyersQuery = gql(_templateObject4());\nexport { getAuthorsQuery, getBooksQuery, getBuyersQuery, login };","map":{"version":3,"sources":["/Users/farha/Downloads/GraphQL/GraphQL/frontend/src/queries/queries.js"],"names":["gql","login","getAuthorsQuery","getBooksQuery","getBuyersQuery"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,QAAoB,cAApB;AAEA,IAAMC,KAAK,GAAGD,GAAH,mBAAX;AAWA,IAAME,eAAe,GAAGF,GAAH,oBAArB;AASA,IAAMG,aAAa,GAAGH,GAAH,oBAAnB;AAQA,IAAMI,cAAc,GAAGJ,GAAH,oBAApB;AAMA,SAASE,eAAT,EAA0BC,aAA1B,EAAyCC,cAAzC,EAAyDH,KAAzD","sourcesContent":["import { gql } from 'apollo-boost'\n\nconst login = gql`\n  query login($email: String) {\n    login(email: $email) {\n      result\n      buyer {\n        firstname\n      }\n    }\n  }\n`\n\nconst getAuthorsQuery = gql`\n  {\n    authors {\n      name\n      id\n    }\n  }\n`\n\nconst getBooksQuery = gql`\n  {\n    books {\n      name\n      id\n    }\n  }\n`\nconst getBuyersQuery = gql`\n  {\n    buyer(email: $email)\n  }\n`\n\nexport { getAuthorsQuery, getBooksQuery, getBuyersQuery, login }\n"]},"metadata":{},"sourceType":"module"}