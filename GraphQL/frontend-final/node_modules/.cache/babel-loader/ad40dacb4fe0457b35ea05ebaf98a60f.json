{"ast":null,"code":"import _classCallCheck from \"/Users/farha/Downloads/GraphQL/GraphQL/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/farha/Downloads/GraphQL/GraphQL/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/farha/Downloads/GraphQL/GraphQL/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/farha/Downloads/GraphQL/GraphQL/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/farha/Downloads/GraphQL/GraphQL/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/farha/Downloads/GraphQL/GraphQL/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/farha/Downloads/GraphQL/GraphQL/frontend/src/components/Login.js\";\nimport React, { Component } from 'react';\nimport '../App.css'; // import { Redirect } from 'react-router'\n\nimport { graphql, compose } from 'react-apollo';\nimport { getBuyersQuery } from '../queries/queries'; // Define a Login Component\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  // call the constructor method\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    // Call the constrictor of Super class i.e The Component\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props)); // maintain the state required for this component\n\n    _this.usernameChangeHandler = function (e) {\n      _this.setState({\n        username: e.target.value\n      });\n    };\n\n    _this.passwordChangeHandler = function (e) {\n      _this.setState({\n        password: e.target.value\n      });\n    };\n\n    _this.submitLogin = function (e) {\n      if (_this.state.username && _this.state.password) {\n        var headers = new Headers(); // prevent page from refresh\n\n        e.preventDefault();\n        var data = {\n          username: _this.state.username,\n          password: _this.state.password\n        };\n\n        var data1 = _this.props.getBuyersQuery({\n          email: 'test@gmail.com',\n          variables: {\n            email: 'test@gmail.com'\n          }\n        });\n\n        console.log('Buyers' + JSON.stringify(data1.buyer));\n      }\n    };\n\n    _this.state = {\n      username: '',\n      password: '',\n      authFlag: false,\n      isInvalid: false // Bind the handlers to this class\n\n    };\n    _this.usernameChangeHandler = _this.usernameChangeHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.passwordChangeHandler = _this.passwordChangeHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.submitLogin = _this.submitLogin.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // Call the Will Mount to set the auth Flag to false\n\n\n  _createClass(Login, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setState({\n        authFlag: false\n      });\n    } // username change handler to update state variable with the text entered by the user\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      // redirect based on successful login\n      var redirectVar = null;\n      var isAuth = this.state.authFlag;\n      var isInvalid = this.state.isInvalid;\n      console.log(isAuth); // if (cookie.load('cookie')) {\n      //   console.log('checking redirection')\n      //   console.log(cookie.load('cookie'))\n      //   redirectVar = <Redirect to='/buyer/restorder' />\n      // }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, redirectVar, React.createElement(\"div\", {\n        class: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"login-form\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"main-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"panel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Login using your GRUBHUB user account\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, !isInvalid ? '' : 'Invalid')), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"form-group \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        onChange: this.usernameChangeHandler,\n        type: \"email\",\n        class: \"form-control\",\n        name: \"username\",\n        placeholder: \"Username\",\n        required: \"required\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        onChange: this.passwordChangeHandler,\n        type: \"password\",\n        class: \"form-control\",\n        name: \"password\",\n        placeholder: \"Password\",\n        required: \"required\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        onClick: this.submitLogin,\n        class: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Login\"))))));\n    }\n  }]);\n\n  return Login;\n}(Component); // export Login Component\n\n\nexport default compose(graphql(getBuyersQuery, {\n  name: 'getBuyersQuery'\n}))(Login);","map":{"version":3,"sources":["/Users/farha/Downloads/GraphQL/GraphQL/frontend/src/components/Login.js"],"names":["React","Component","graphql","compose","getBuyersQuery","Login","props","usernameChangeHandler","e","setState","username","target","value","passwordChangeHandler","password","submitLogin","state","headers","Headers","preventDefault","data","data1","email","variables","console","log","JSON","stringify","buyer","authFlag","isInvalid","bind","redirectVar","isAuth","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport '../App.css'\n\n// import { Redirect } from 'react-router'\nimport { graphql, compose } from 'react-apollo'\nimport { getBuyersQuery } from '../queries/queries'\n// Define a Login Component\nclass Login extends Component {\n  // call the constructor method\n  constructor (props) {\n    // Call the constrictor of Super class i.e The Component\n    super(props)\n    // maintain the state required for this component\n    this.state = {\n      username: '',\n      password: '',\n      authFlag: false,\n      isInvalid: false\n    }\n    // Bind the handlers to this class\n    this.usernameChangeHandler = this.usernameChangeHandler.bind(this)\n    this.passwordChangeHandler = this.passwordChangeHandler.bind(this)\n    this.submitLogin = this.submitLogin.bind(this)\n  }\n  // Call the Will Mount to set the auth Flag to false\n  componentWillMount () {\n    this.setState({\n      authFlag: false\n    })\n  }\n  // username change handler to update state variable with the text entered by the user\n  usernameChangeHandler = e => {\n    this.setState({\n      username: e.target.value\n    })\n  }\n  // password change handler to update state variable with the text entered by the user\n  passwordChangeHandler = e => {\n    this.setState({\n      password: e.target.value\n    })\n  }\n  // submit Login handler to send a request to the node backend\n  submitLogin = e => {\n    if (this.state.username && this.state.password) {\n      var headers = new Headers()\n      // prevent page from refresh\n      e.preventDefault()\n      const data = {\n        username: this.state.username,\n        password: this.state.password\n      }\n\n      var data1 = this.props.getBuyersQuery({\n        email: 'test@gmail.com',\n        variables: {\n          email: 'test@gmail.com'\n        }\n      })\n\n      console.log('Buyers' + JSON.stringify(data1.buyer))\n    }\n  }\n\n  render () {\n    // redirect based on successful login\n    let redirectVar = null\n    const isAuth = this.state.authFlag\n    const isInvalid = this.state.isInvalid\n    console.log(isAuth)\n\n    // if (cookie.load('cookie')) {\n    //   console.log('checking redirection')\n    //   console.log(cookie.load('cookie'))\n    //   redirectVar = <Redirect to='/buyer/restorder' />\n    // }\n\n    return (\n      <div>\n        {redirectVar}\n        <div class='container'>\n          <div class='login-form' align='center'>\n            <div class='main-div'>\n              <div class='panel'>\n                <h2>Login using your GRUBHUB user account</h2>\n                <div>{!isInvalid ? '' : 'Invalid'}</div>\n              </div>\n              <form>\n                <div class='form-group '>\n                  <input\n                    onChange={this.usernameChangeHandler}\n                    type='email'\n                    class='form-control'\n                    name='username'\n                    placeholder='Username'\n                    required='required'\n                  />\n                </div>\n                <div class='form-group'>\n                  <input\n                    onChange={this.passwordChangeHandler}\n                    type='password'\n                    class='form-control'\n                    name='password'\n                    placeholder='Password'\n                    required='required'\n                  />\n                </div>\n                <button\n                  type='submit'\n                  onClick={this.submitLogin}\n                  class='btn btn-primary'\n                >\n                  Login\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n// export Login Component\nexport default compose(graphql(getBuyersQuery, { name: 'getBuyersQuery' }))(\n  Login\n)\n"]},"metadata":{},"sourceType":"module"}